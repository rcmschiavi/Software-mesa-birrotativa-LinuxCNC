# Carrega o programa em python em modo aguarda ficar pronto


loadrt hal_bb_gpio output_pins=914,916,918,922 input_pins=815,817
loadrt stepgen step_type=0,0 ctrl_type=p,p
loadusr ./jog
loadrt threads name1=fast fp1=0 period1=50000 name2=slow period2=1000000


addf stepgen.make-pulses fast
addf stepgen.update-freq slow
addf stepgen.capture-position slow
addf bb_gpio.write fast

setp stepgen.0.position-scale 40.75
setp stepgen.1.position-scale 300
# mais ou menos 3 segundos para cada eixo alcançar velocidade máxima
setp stepgen.0.maxaccel 8
setp stepgen.1.maxaccel 1

net pos_b stepgen.0.position-cmd <= machine_controll.set_position_rot
net pos_c stepgen.1.position-cmd <= machine_controll.set_position_basc

net enable_b stepgen.0.enable <= machine_controll.enable_rot
net enable_c stepgen.1.enable <= machine_controll.enable_basc

net sensor_b machine_controll.sensor_basc <= bb_gpio.p8.in-15
net sensor_c machine_controll.sensor_rot <= bb_gpio.p8.in-17

net pos_b_now machine_controll.get_position_rot <= stepgen.0.counts
net pos_c_now machine_controll.get_position_basc <= stepgen.1.counts

net step_b bb_gpio.p9.out-14 <= stepgen.0.step
net step_c bb_gpio.p9.out-18 <= stepgen.1.step
net dir_b bb_gpio.p9.out-16 <= stepgen.0.dir
net dir_c bb_gpio.p9.out-22 <= stepgen.1.dir


start